;2015/04/09 
;These data were generated by setting a breakpoint inside interp_magdata_for_fastloc. I wanted to inspect fastLocSatProp and
;fastLoc_Times to see what exactly was going on. I am satisfied that get_fastloc_inds__IMF_conds, interp_magdata_for_fastloc, and
;the others all work properly.

;restore,'fastLoc_intervals2--20150408.sav'
FOR i=0,10 DO print,format='(A0,T30,A0)',time_to_str(mag_utc(fastlocsatprop_i[i]),/ms),time_to_str(fastLoc_Times(i),/ms)
;1996-10-06/16:14:00.000      1996-10-06/16:25:48.797
;1996-10-06/16:14:00.000      1996-10-06/16:25:51.295
;1996-10-06/16:14:00.000      1996-10-06/16:25:53.797
FOR i=0,10 DO print,format='(A0,T30,A0)',time_to_str(mag_utc(fastlocsatprop_i[i])+delay,/ms),time_to_str(fastLoc_Times(i),/ms)
;1996-10-06/16:25:00.000      1996-10-06/16:25:48.797
;1996-10-06/16:25:00.000      1996-10-06/16:25:51.295

;skip many lines...
;.so 1

;****From interp_mag_data_for_fastloc.pro****
;Smooth window is set to 5 minutes
help,byFastLoc
help,byMin_ii
;ByMin magnitude requirement: 5 nT
;Losing 124019 5-min segments because of minimum By requirement.
;****From check_imf_stability_for_fastloc.pro****

;skip many lines...
;.so 1

help,angleLim2
help,angleLim1

help,negAngle
help,posAngle
help,clockStr

print,phiFastLoc[0]
;       116.68176
print,phiFastLoc[1]
;       116.76415

;Here I was trying to see whether the selected clock angles actually matched; all should have been in the range between 45 and
;135, and they were.
cgplot,phiFastLoc[0:200]
;6145 events with IMF predominantly duskward.

;not believing the filtering that was done, here I was trying to see why some clock angles weren't selected. It appears
;that all of the bad ones did, in fact, fall in the wrong range.
     phiImf_ii=where(phiFastLoc GE negAngle AND phiFastLoc LE posAngle)
help,phiIMF_ii
     phiImf_ii=where(phiFastLoc GE negAngle AND phiFastLoc LE posAngle,complement=badIMF_ii)
phiBad=phiFastLoc(badIMF_ii)
print,phiBad[0:20]
;      -99.076292      -98.870462      -98.664891      -98.459503      -98.326469
;      -98.397633      -98.468827      -98.540049      -98.611299      -98.682576
;      -98.753882      -98.825244      -98.896605      -98.967992      -99.039407
;      -99.110849      -99.182317      -99.253840      -99.325360      -99.396907
;      -99.468479
;
;Next I tried the absolute value of phiFastLoc, which nearly doubled (i.e., gave both duskward AND dawnward) the number of
;passable events.
     phiImf_ii=where(ABS(phiFastLoc) GE negAngle AND phiFastLoc LE posAngle,complement=badIMF_ii)
print,phiBad[0:20]
;      -99.076292      -98.870462      -98.664891      -98.459503      -98.326469
;      -98.397633      -98.468827      -98.540049      -98.611299      -98.682576
;      -98.753882      -98.825244      -98.896605      -98.967992      -99.039407
;      -99.110849      -99.182317      -99.253840      -99.325360      -99.396907
;      -99.468479
phiBad=phiFastLoc(badIMF_ii)
print,phiBad[0:20]
;       150.13078       149.80372       149.39053       148.97628       148.56100
;       148.14474       147.72754       147.30944       146.89049       146.47071
;       146.05016       145.62888       145.20691       144.78430       144.36093
;       143.93717       143.51290       143.08817       142.66303       142.23751
;       141.81167
;skip many lines...
;.so 1

;There are 16152 events prior to which we have 1 minutes of consecutive mag data.
;skip lines
;.so 1

breakpoint,/disable,0
breakpoint,'/home/spencerh/Research/Cusp/ACE_FAST/scripts_for_processing_Dartmouth_data/check_imf_stability_for_fastloc.pro',158,/once
help,/breakpoints
print,(routine_info('CHECK_IMF_STABILITY_FOR_FASTLOC',/SOURCE,/FUNCTIONS)).PATH
;/home/spencerh/Research/Cusp/ACE_FAST/scripts_for_processing_Dartmouth_data/check_imf_stability_for_fastloc.pro
help,/breakpoints
.c
breakpoint,/enable,0
help,/trace
help,/breakpoints

;I only had a requirement of one minute for IMF stability, so not surprisingly, none were filtered out based on that requirement.
;Losing 0 events associated with unstable IMF.
;****END check_imf_stability_for_fastloc.pro****

